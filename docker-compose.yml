services:
  db:
    image: postgres:15-alpine
    container_name: pokedex-db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pokedex-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pokemon_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  app:
    build: .
    container_name: pokedex-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    networks:
      - pokedex-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:3000/api/health"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:

networks:
  pokedex-network:
    driver: bridge
